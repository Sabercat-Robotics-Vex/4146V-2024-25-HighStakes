{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\ncontroller_1 = Controller(PRIMARY)\nmotor_drive_br = Motor(Ports.PORT20, GearSetting.RATIO_18_1, True)\nmotor_drive_bl = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nmotor_drive_fr = Motor(Ports.PORT10, GearSetting.RATIO_18_1, True)\nmotor_drive_fl = Motor(Ports.PORT2, GearSetting.RATIO_18_1, False)\nmotor_intake = Motor(Ports.PORT15, GearSetting.RATIO_18_1, False)\npneu_goal_catch = DigitalOut(brain.three_wire_port.a)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n# Make random actually random\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()\n    urandom.seed(int(random))\n      \n# Set random seed \ninitializeRandomSeed()\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n#\tAuthor:       VEX\n#\tCreated:\n#\tDescription:  VEXcode V5 Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\nmotor_drive_fr.set_velocity(100, PERCENT)\nmotor_drive_fl.set_velocity(100, PERCENT)\nmotor_drive_br.set_velocity(100, PERCENT)\nmotor_drive_bl.set_velocity(100, PERCENT)\nmotor_intake.set_velocity(70, PERCENT)\n\n# Begin project code\ndef driveFor(dist, direction):\n    motor_drive_fr.spin_for(direction, dist, TURNS, wait=False)\n    motor_drive_fl.spin_for(direction, dist, TURNS, wait=False)\n    motor_drive_br.spin_for(direction, dist, TURNS, wait=False)\n    motor_drive_bl.spin_for(direction, dist, TURNS, wait=True)\n\ndef auton():\n    driveFor(3.2, REVERSE)\n    #pneu_goal_catch.set(True)\n    #motor_intake.spin_for(FORWARD, 4, TURNS)\n    wait(0.25,SECONDS)\n    motor_drive_fr.spin_for(REVERSE, 1.125, TURNS, wait=False)\n    motor_drive_fl.spin_for(FORWARD, 1.125, TURNS, wait=False)\n    motor_drive_br.spin_for(REVERSE, 1.125, TURNS, wait=False)\n    motor_drive_bl.spin_for(FORWARD, 1.125, TURNS, wait=True)\n    wait(0.25,SECONDS)\n    driveFor(2.3, FORWARD)\n    wait(0.25,SECONDS)\n    #motor_intake.spin_for(FORWARD, 6, TURNS)\n    #second goal\n    #1 more ring\n    motor_drive_fr.spin_for(FORWARD, 1.1257, TURNS, wait=False)\n    motor_drive_fl.spin_for(REVERSE, 1.1257, TURNS, wait=False)\n    motor_drive_br.spin_for(FORWARD, 1.1257, TURNS, wait=False)\n    motor_drive_bl.spin_for(REVERSE, 1.1257, TURNS, wait=True)\n    wait(0.25,SECONDS)\n    #pneu_goal_catch.set(False)\n    wait(0.25,SECONDS)\n    driveFor(1.5, REVERSE)\n    wait(0.25,SECONDS)\n    #pneu_goal_catch.set(True)\n    wait(0.25,SECONDS)\n    driveFor(3.5, FORWARD)\n    wait(0.25,SECONDS)\n    #motor_intake.spin_for(FORWARD, 6, TURNS)\n    #ladder\n    #OTHER SIDE!!!!!!\ndef driver_control():\n    while True:\n        Hpos = controller_1.axis1.position()\n        Vpos = controller_1.axis3.position()\n        motor_drive_fl.spin(FORWARD)\n        motor_drive_fr.spin(FORWARD)\n        motor_drive_bl.spin(FORWARD)\n        motor_drive_br.spin(FORWARD)\n        motor_drive_fl.set_velocity(Vpos + Hpos,PERCENT)\n        motor_drive_fr.set_velocity(Vpos - Hpos,PERCENT)\n        motor_drive_bl.set_velocity(Vpos + Hpos,PERCENT)\n        motor_drive_br.set_velocity(Vpos - Hpos,PERCENT)\n        if controller_1.buttonL2.pressing:\n            #motor_intake.spin(FORWARD)\n            pass\n        if controller_1.buttonL1.pressing:\n            #motor_intake.spin(REVERSE)\n            pass\n        if controller_1.buttonR2.pressing():\n            #pneu_goal_catch.set(True)\n            pass\n        if controller_1.buttonR1.pressing():\n            #pneu_goal_catch.set(False)\n            pass\n        wait(0.02,SECONDS)\n\ncompetition = Competition(driver_control, auton)\n","textLanguage":"python","robotConfig":[{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[20],"name":"motor_drive_br","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[1],"name":"motor_drive_bl","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[10],"name":"motor_drive_fr","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[2],"name":"motor_drive_fl","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[15],"name":"motor_intake","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[1],"name":"pneu_goal_catch","customName":true,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{"id":"partner"},"triportSourcePort":22}],"slot":1,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.8","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}