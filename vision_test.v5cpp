{"mode":"Text","hardwareTarget":"brain","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\n// AI Classification Competition Element IDs\nenum gameElements {\n  mobileGoal,\n  redRing,\n  blueRing,\n};\n\ncontroller Controller1 = controller(primary);\n// AI Vision Color Descriptions\n// AI Vision Code Descriptions\nvex::aivision VisSense = aivision(PORT1, aivision::ALL_AIOBJS);\n\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\n\n\nvoid vexcodeInit() {\n\n  //Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n/*----------------------------------------------------------------------------*/\n/*                                                                            */\n/*    Module:       main.cpp                                                  */\n/*    Author:       {author}                                                  */\n/*    Created:      {date}                                                    */\n/*    Description:  V5 project                                                */\n/*                                                                            */\n/*----------------------------------------------------------------------------*/\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\ncompetition Competition;\n\nvoid driver()\n{\n  while (true)\n  {\n    if (VisSense.installed() && Controller1.ButtonA.pressing())\n    {\n      VisSense.takeSnapshot(aivision::ALL_AIOBJS);\n      wait(10,msec);\n      Brain.Screen.clearScreen();\n      Brain.Screen.setCursor(1,1);\n      Brain.Screen.print(\"(%3.1f s) %d objects detected:\", Brain.Timer.time(seconds), VisSense.objectCount);\n      Brain.Screen.newLine();\n      if (VisSense.objects[0].exists)\n      {\n        for (int i = 0; i < VisSense.objectCount; i++)\n        {\n          aivision::object obj = VisSense.objects[i];\n          switch(obj.id)\n          {\n            case 0:\n              Brain.Screen.print(\"Mobile Goal\");\n              break;\n            case 1:\n              Brain.Screen.print(\"Red Ring\");\n              break;\n            case 2:\n              Brain.Screen.print(\"Blue Ring\");\n              break;\n            default:\n              Brain.Screen.print(\"Unrecognized object\");\n          }\n          Brain.Screen.newLine();\n          Brain.Screen.print(\"  Center: (%03d,%03d), width: %03d, height: %03d\", obj.centerX, obj.centerY, obj.width, obj.height);\n          Brain.Screen.newLine();\n        }\n      }\n      while (Controller1.ButtonA.pressing()) {}\n    }\n    wait(20, msec);\n  }\n}\n\nint main()\n{\n  // Initializing Robot Configuration. DO NOT REMOVE!\n  vexcodeInit();\n  // Begin project code\n  Competition.drivercontrol(driver);\n}\n","textLanguage":"cpp","robotConfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"}},{"port":[1],"name":"VisSense","customName":true,"deviceType":"AIVision","deviceClass":"aivision","setting":{"config":"{\"colors\":[],\"codes\":[],\"tags\":false,\"AIObjects\":true,\"AIObjectModel\":[\"Ball(Blue)\",\"Ball(Green)\",\"Ball(Red)\",\"Ring(Blue)\",\"Ring(Green)\",\"Ring(Red)\",\"Cube(Blue)\",\"Cube(Green)\",\"Cube(Red)\"],\"AIModelMetadata\":{\"id\":16,\"version\":1,\"name\":\"2024-2025 High Stakes\"},\"aiModelDropDownValue\":\"2024-2025 High Stakes\"}","isConfigured":"false"}}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.7","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}